{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport appApi from \"../services/appApi\";\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: null,\n  reducers: {\n    addNotifications: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n\n      if (state.newMessages[payload]) {\n        state.newMessages[payload] = state.newMessages[payload] + 1;\n      } else {\n        state.newMessages[payload] = 1;\n      }\n    },\n    resetNotifications: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      delete state.newMessages[payload];\n    }\n  },\n  extraReducers: builder => {\n    // save user after signup\n    builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return payload;\n    }); // save user after login\n\n    builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return payload;\n    }); // logout: destroy user session\n\n    builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\n  }\n});\nexport const {\n  addNotifications,\n  resetNotifications\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/commit/chathub/mern-chat-frontend/src/features/userSlice.js"],"names":["createSlice","appApi","userSlice","name","initialState","reducers","addNotifications","state","payload","newMessages","resetNotifications","extraReducers","builder","addMatcher","endpoints","signupUser","matchFulfilled","loginUser","logoutUser","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACjCG,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAE,IAFmB;AAGjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,WAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;;AACtC,UAAID,KAAK,CAACE,WAAN,CAAkBD,OAAlB,CAAJ,EAAgC;AAC5BD,QAAAA,KAAK,CAACE,WAAN,CAAkBD,OAAlB,IAA6BD,KAAK,CAACE,WAAN,CAAkBD,OAAlB,IAA6B,CAA1D;AACH,OAFD,MAEO;AACHD,QAAAA,KAAK,CAACE,WAAN,CAAkBD,OAAlB,IAA6B,CAA7B;AACH;AACJ,KAPK;AAQNE,IAAAA,kBAAkB,EAAE,CAACH,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AACxC,aAAOD,KAAK,CAACE,WAAN,CAAkBD,OAAlB,CAAP;AACH;AAVK,GAHuB;AAgBjCG,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxB;AACAA,IAAAA,OAAO,CAACC,UAAR,CAAmBZ,MAAM,CAACa,SAAP,CAAiBC,UAAjB,CAA4BC,cAA/C,EAA+D,CAACT,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAwBA,OAAxB;AAAA,KAA/D,EAFwB,CAGxB;;AACAI,IAAAA,OAAO,CAACC,UAAR,CAAmBZ,MAAM,CAACa,SAAP,CAAiBG,SAAjB,CAA2BD,cAA9C,EAA8D,CAACT,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAwBA,OAAxB;AAAA,KAA9D,EAJwB,CAKxB;;AACAI,IAAAA,OAAO,CAACC,UAAR,CAAmBZ,MAAM,CAACa,SAAP,CAAiBI,UAAjB,CAA4BF,cAA/C,EAA+D,MAAM,IAArE;AACH;AAvBgC,CAAD,CAA7B;AA0BP,OAAO,MAAM;AAAEV,EAAAA,gBAAF;AAAoBI,EAAAA;AAApB,IAA2CR,SAAS,CAACiB,OAA3D;AACP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport appApi from \"../services/appApi\";\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: null,\r\n    reducers: {\r\n        addNotifications: (state, { payload }) => {\r\n            if (state.newMessages[payload]) {\r\n                state.newMessages[payload] = state.newMessages[payload] + 1;\r\n            } else {\r\n                state.newMessages[payload] = 1;\r\n            }\r\n        },\r\n        resetNotifications: (state, { payload }) => {\r\n            delete state.newMessages[payload];\r\n        },\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        // save user after signup\r\n        builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, { payload }) => payload);\r\n        // save user after login\r\n        builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, { payload }) => payload);\r\n        // logout: destroy user session\r\n        builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\r\n    },\r\n});\r\n\r\nexport const { addNotifications, resetNotifications } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}