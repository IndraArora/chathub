{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\whatsapp-clone\\\\mern-chat-frontend\\\\src\\\\components\\\\MessageForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./MessageForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MessageForm() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const user = useSelector(state => state.user);\n  const {\n    socket,\n    currentRoom,\n    setMessages,\n    messages,\n    privateMemberMsg\n  } = useContext(AppContext);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  function getFormattedDate() {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : \"0\" + month;\n    let day = date.getDate().toString();\n    day = day.length > 1 ? day : \"0\" + day;\n    return month + \"/\" + day + \"/\" + year;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  function scrollToBottom() {\n    var _messageEndRef$curren;\n\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  const todayDate = getFormattedDate();\n  socket.off(\"room-messages\").on(\"room-messages\", roomMessages => {\n    setMessages(roomMessages);\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!message) return;\n    const today = new Date();\n    const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n    const time = today.getHours() + \":\" + minutes;\n    const roomId = currentRoom;\n    socket.emit(\"message-room\", roomId, message, user, time, todayDate);\n    setMessage(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-output\",\n      children: [user && !(privateMemberMsg !== null && privateMemberMsg !== void 0 && privateMemberMsg._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: [\"You are in the \", currentRoom, \" room\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 52\n      }, this), user && (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info conversation-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Your conversation with \", privateMemberMsg.name, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: privateMemberMsg.picture,\n              className: \"conversation-profile-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: \"Please login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this), user && messages.map((_ref, idx) => {\n        let {\n          _id: date,\n          messagesByDate\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert alert-info text-center message-date-indicator\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), messagesByDate === null || messagesByDate === void 0 ? void 0 : messagesByDate.map((_ref2, msgIdx) => {\n            let {\n              content,\n              time,\n              from: sender\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: (sender === null || sender === void 0 ? void 0 : sender.email) == (user === null || user === void 0 ? void 0 : user.email) ? \"message\" : \"incoming-message\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-inner\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: sender.picture,\n                    style: {\n                      width: 35,\n                      height: 35,\n                      objectFit: \"cover\",\n                      borderRadius: \"50%\",\n                      marginRight: 10\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"message-sender\",\n                    children: sender._id == (user === null || user === void 0 ? void 0 : user._id) ? \"You\" : sender.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-content\",\n                  children: content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-timestamp-left\",\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)\n            }, msgIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this);\n          })]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 11,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Your message\",\n              disabled: !user,\n              value: message,\n              onChange: e => setMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            style: {\n              width: \"100%\",\n              backgroundColor: \"orange\"\n            },\n            disabled: !user,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MessageForm, \"O/Avsn7yoS9Abby5w0pliL5b1/E=\", false, function () {\n  return [useSelector];\n});\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/whatsapp-clone/mern-chat-frontend/src/components/MessageForm.js"],"names":["React","useContext","useEffect","useRef","useState","Button","Col","Form","Row","useSelector","AppContext","MessageForm","message","setMessage","user","state","socket","currentRoom","setMessages","messages","privateMemberMsg","messageEndRef","scrollToBottom","getFormattedDate","date","Date","year","getFullYear","month","getMonth","toString","length","day","getDate","handleSubmit","e","preventDefault","current","scrollIntoView","behavior","todayDate","off","on","roomMessages","today","minutes","getMinutes","time","getHours","roomId","emit","_id","name","picture","map","idx","messagesByDate","msgIdx","content","from","sender","email","width","height","objectFit","borderRadius","marginRight","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppContext } from \"../context/appContext\";\r\nimport \"./MessageForm.css\";\r\nfunction MessageForm() {\r\n    const [message, setMessage] = useState(\"\");\r\n    const user = useSelector((state) => state.user);\r\n    const { socket, currentRoom, setMessages, messages, privateMemberMsg } = useContext(AppContext);\r\n    const messageEndRef = useRef(null);\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    function getFormattedDate() {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        let month = (1 + date.getMonth()).toString();\r\n\r\n        month = month.length > 1 ? month : \"0\" + month;\r\n        let day = date.getDate().toString();\r\n\r\n        day = day.length > 1 ? day : \"0\" + day;\r\n\r\n        return month + \"/\" + day + \"/\" + year;\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function scrollToBottom() {\r\n        messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    const todayDate = getFormattedDate();\r\n\r\n    socket.off(\"room-messages\").on(\"room-messages\", (roomMessages) => {\r\n        setMessages(roomMessages);\r\n    });\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!message) return;\r\n        const today = new Date();\r\n        const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\r\n        const time = today.getHours() + \":\" + minutes;\r\n        const roomId = currentRoom;\r\n        socket.emit(\"message-room\", roomId, message, user, time, todayDate);\r\n        setMessage(\"\");\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"messages-output\">\r\n                {user && !privateMemberMsg?._id && <div className=\"alert alert-info\">You are in the {currentRoom} room</div>}\r\n                {user && privateMemberMsg?._id && (\r\n                    <>\r\n                        <div className=\"alert alert-info conversation-info\">\r\n                            <div>\r\n                                Your conversation with {privateMemberMsg.name} <img src={privateMemberMsg.picture} className=\"conversation-profile-pic\" />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {!user && <div className=\"alert alert-danger\">Please login</div>}\r\n\r\n                {user &&\r\n                    messages.map(({ _id: date, messagesByDate }, idx) => (\r\n                        <div key={idx}>\r\n                            <p className=\"alert alert-info text-center message-date-indicator\">{date}</p>\r\n                            {messagesByDate?.map(({ content, time, from: sender }, msgIdx) => (\r\n                                <div className={sender?.email == user?.email ? \"message\" : \"incoming-message\"} key={msgIdx}>\r\n                                    <div className=\"message-inner\">\r\n                                        <div className=\"d-flex align-items-center mb-3\">\r\n                                            <img src={sender.picture} style={{ width: 35, height: 35, objectFit: \"cover\", borderRadius: \"50%\", marginRight: 10 }} />\r\n                                            <p className=\"message-sender\">{sender._id == user?._id ? \"You\" : sender.name}</p>\r\n                                        </div>\r\n                                        <p className=\"message-content\">{content}</p>\r\n                                        <p className=\"message-timestamp-left\">{time}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                <div ref={messageEndRef} />\r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md={11}>\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" placeholder=\"Your message\" disabled={!user} value={message} onChange={(e) => setMessage(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                        <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\", backgroundColor: \"orange\" }} disabled={!user}>\r\n                            <i className=\"fas fa-paper-plane\"></i>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MessageForm;\r\n"]},"metadata":{},"sourceType":"module"}